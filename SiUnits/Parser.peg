@namespace SiUnits
@using System.Linq

start <Factor> = _ f:factor _ EOF { f }

factor <Factor> -memoize
    = left:factor (_ [*·⋅] _ / WS) right:power { left * right }
    / left:factor _ "/" _ right:power { left / right }
    / power

power <Factor>
    = left:primary _ "^" _ right:int { left.Pow(right) }
    / primary

primary <Factor> -memoize
    = numberFactor
    / siUnitFactor
    / nameFactor
    / "(" f:factor ")" { f }

numberFactor <NumberFactor>
    = n:int { new NumberFactor(n) }

siUnitFactor <Factor>
    = p:siPrefixSymbol n:siUnitSymbol !name { p * n }
    / n:siUnitSymbol !name { n }
    / p:siPrefix n:siUnitName !name { p * n }
    / n:siUnitName !name { n }

siPrefixSymbol <NumberFactor>
    = "da" { Factors.Deca }
    / "h"  { Factors.Hecto }
    / "k"  { Factors.Kilo }
    / "M"  { Factors.Mega }
    / "G"  { Factors.Giga }
    / "T"  { Factors.Tera }
    / "P"  { Factors.Peta }
    / "E"  { Factors.Exa }
    / "Z"  { Factors.Zetta }
    / "Y"  { Factors.Yotta }
    / "R"  { Factors.Ronna }
    / "Q"  { Factors.Quetta }
    / "d"  { Factors.Deci }
    / "c"  { Factors.Centi }
    / "m"  { Factors.Milli }
    / "μ"  { Factors.Micro }
    / "n"  { Factors.Nano }
    / "p"  { Factors.Pico }
    / "f"  { Factors.Femto }
    / "a"  { Factors.Atto }
    / "z"  { Factors.Zepto }
    / "y"  { Factors.Yocto }
    / "r"  { Factors.Ronto }
    / "q"  { Factors.Quecto }

siPrefix <NumberFactor>
    = "deca"i   { Factors.Deca }
    / "hecto"i  { Factors.Hecto }
    / "kilo"i   { Factors.Kilo }
    / "mega"i   { Factors.Mega }
    / "giga"i   { Factors.Giga }
    / "tera"i   { Factors.Tera }
    / "peta"i   { Factors.Peta }
    / "exa"i    { Factors.Exa }
    / "zetta"i  { Factors.Zetta }
    / "yotta"i  { Factors.Yotta }
    / "ronna"i  { Factors.Ronna }
    / "quetta"i { Factors.Quetta }
    / "deci"i   { Factors.Deci }
    / "centi"i  { Factors.Centi }
    / "milli"i  { Factors.Milli }
    / "micro"i  { Factors.Micro }
    / "nano"i   { Factors.Nano }
    / "pico"i   { Factors.Pico }
    / "femto"i  { Factors.Femto }
    / "atto"i   { Factors.Atto }
    / "zepto"i  { Factors.Zepto }
    / "yocto"i  { Factors.Yocto }
    / "ronto"i  { Factors.Ronto }
    / "quecto"i { Factors.Quecto }

siUnitSymbol <Factor>
    = "m"   { Factors.Meter }
    / "g"   { Factors.Gram }
    / "s"   { Factors.Second }
    / "A"   { Factors.Ampere }
    / "K"   { Factors.Kelvin }
    / "mol" { Factors.Mole }
    / "cd"  { Factors.Candela }
    / "Hz"  { Factors.Hertz }
    / "N"   { Factors.Newton }
    / "Pa"  { Factors.Pascal }
    / "J"   { Factors.Joule }
    / "W"   { Factors.Watt }
    / "C"   { Factors.Coulomb }
    / "V"   { Factors.Volt }
    / "F"   { Factors.Farad }
    / "Ω"   { Factors.Ohm }
    / "S"   { Factors.Siemens }
    / "Wb"  { Factors.Weber }
    / "T"   { Factors.Tesla }
    / "H"   { Factors.Henry }

siUnitName <Factor>
    = "meter"i "s"i?   { Factors.Meter }
    / "metre"i "s"i?   { Factors.Meter }
    / "gram"i "s"i?    { Factors.Gram }
    / "second"i "s"i?  { Factors.Second }
    / "ampere"i "s"i?  { Factors.Ampere }
    / "kelvin"i        { Factors.Kelvin }
    / "mole"i "s"i?    { Factors.Mole }
    / "candela"i "s"i? { Factors.Candela }
    / "hertz"i         { Factors.Hertz }
    / "newton"i "s"i?  { Factors.Newton }
    / "pascal"i "s"i?  { Factors.Pascal }
    / "joule"i "s"i?   { Factors.Joule }
    / "watt"i "s"i?    { Factors.Watt }
    / "coulomb"i "s"i? { Factors.Coulomb }
    / "volt"i "s"i?    { Factors.Volt }
    / "farad"i "s"i?   { Factors.Farad }
    / "ohm"i "s"i?     { Factors.Ohm }
    / "siemens"i       { Factors.Siemens }
    / "weber"i "s"i?   { Factors.Weber }
    / "tesla"i "s"i?   { Factors.Tesla }
    / "henry"i         { Factors.Henry }
    / "henries"i       { Factors.Henry }

nameFactor <NameFactor>
    = n:name { new NameFactor(n) }

name
    = "" (c:. &{ char.IsLetter(c[0]) })+

int <int>
    = negative:[-−]? digits:("" [0-9]+) { negative.Count == 0 ? int.Parse(digits) : -int.Parse(digits) }

_   = "" WS?
WS  = "" [ \t\v\f\u00A0\uFEFF\u1680\u180E\u2000-\u200A\u202F\u205F\u3000]+
EOF = !.
